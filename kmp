#include <stdio.h>
 #include <string.h>
 // Function to compute LPS array
 void computeLPSArray(char* pat, int M, int lps[]) {
    int len = 0;
    lps[0] = 0; // lps[0] is always 0
    int i = 1;
    while (i < M) {
        if (pat[i] == pat[len]) {
            len++;
            lps[i] = len;
            i++;
        } else {
            if (len != 0) {
                len = lps[len - 1];  // Don't increment i here
            } else {
                lps[i] = 0;
                i++;
            }
        }
    }
 }
 // KMP search function
 void KMPSearch(char* pat, char* txt) {
    int M = strlen(pat);
    int N = strlen(txt);
    int matchCount = 0;
    int lps[M];
    computeLPSArray(pat, M, lps);
    int i = 0; // index for txt[]
    int j = 0; // index for pat[]
    printf("\nPattern found at indices: ");
    while (i < N) {
        if (pat[j] == txt[i]) {
            i++;
            j++;
        }
        if (j == M) {
            printf("%d ", i - j);
            matchCount++;
            j = lps[j - 1];  // Continue searching
        } else if (i < N && pat[j] != txt[i]) {
            if (j != 0)
                j = lps[j - 1];
            else
                i++;
        }
    }
    printf("\nTotal matches found: %d\n", matchCount);
 }
 int main() {
    char txt[100], pat[100];
    printf("Enter the text: ");
    scanf(" %[^\n]", txt);  // To read string with spaces
    printf("Enter the pattern to search: ");
    scanf(" %[^\n]", pat);
    KMPSearch(pat, txt);
    return 0;
 }

#include <stdio.h>
 #include <string.h>
 #define MAX 100
 // Function to find LCS
 void LCS(char X[], char Y[], int m, int n) {
    int dp[MAX][MAX];      // DP matrix
    char arrow[MAX][MAX];  // To store directions: '↖' (diagonal), '↑', or '←'
    // Fill the matrix
    for (int i = 0; i <= m; i++) {
        for (int j = 0; j <= n; j++) {
            if (i == 0 || j == 0) {
                dp[i][j] = 0;
                arrow[i][j] = ' ';
            }
            else if (X[i - 1] == Y[j - 1]) {
                dp[i][j] = dp[i - 1][j - 1] + 1;
                arrow[i][j] = 'D'; // Diagonal ↖
            }
            else if (dp[i - 1][j] >= dp[i][j - 1]) {
                dp[i][j] = dp[i - 1][j];
                arrow[i][j] = 'U'; // Up ↑
            }
            else {
                dp[i][j] = dp[i][j - 1];
                arrow[i][j] = 'L'; // Left ←
            }
        }
    }
    // Print the DP matrix with arrows
    printf("\nDP Matrix with Arrows:\n");
    for (int i = 0; i <= m; i++) {
        for (int j = 0; j <= n; j++) {
            if (arrow[i][j] == 'D')
                printf("↖%2d ", dp[i][j]);
            else if (arrow[i][j] == 'U')
                printf("↑%2d ", dp[i][j]);
            else if (arrow[i][j] == 'L')
                printf("←%2d ", dp[i][j]);
            else
                printf(" %2d ", dp[i][j]);
        }
        printf("\n");
    }
    // Backtrack to find LCS
    int i = m, j = n;
    char lcs[MAX];
    int index = dp[m][n];
    lcs[index] = '\0'; // End of string
    while (i > 0 && j > 0) {
        if (X[i - 1] == Y[j - 1]) {
            lcs[--index] = X[i - 1];
            i--;
            j--;
        }
        else if (dp[i - 1][j] > dp[i][j - 1])
            i--;
        else
            j--;
    }
    printf("\nLength of LCS: %d\n", dp[m][n]);
    printf("LCS: %s\n", lcs);
 }
 int main() {
    char X[MAX], Y[MAX];
    printf("Enter first string: ");
    scanf("%s", X);
    printf("Enter second string: ");
    scanf("%s", Y);
    int m = strlen(X);
    int n = strlen(Y);
    LCS(X, Y, m, n);
    return 0;
 }
